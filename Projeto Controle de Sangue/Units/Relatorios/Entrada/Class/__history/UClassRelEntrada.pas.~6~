unit UClassRelEntrada;

interface

uses System.SysUtils, System.Classes, UEnumsRelatorio;

type
  TRelEntrada = class(TPersistent)
  private

    FDataEntrada: TDate;

    FFiltroTipo: TTipoFiltro;
    FListTipo: TStringList;

    FFiltroGrupoSanguineo: TTipoFiltro;
    FListGrupoSanguineo: TStringList;

    FFiltroVolume: TTipoFiltro;
    FListVolume: TStringList;

    FVisualizar: Boolean;

    function getDataEntrada: TDate;
    function getFiltroGrupoSanguineo: TTipoFiltro;
    function getFiltroTipo: TTipoFiltro;
    function getFiltroVolume: TTipoFiltro;
    function getVisualizar: Boolean;

    procedure setDataEntrada(const Value: TDate);
    procedure setFiltroGrupoSanguineo(const Value: TTipoFiltro);
    procedure setFiltroTipo(const Value: TTipoFiltro);
    procedure setFiltroVolume(const Value: TTipoFiltro);
    procedure setVisualizar(const Value: Boolean);

  public

    property DataEntrada: TDate read getDataEntrada write setDataEntrada;

    property FiltroTipo: TTipoFiltro read getFiltroTipo write setFiltroTipo;
    property ListTipo: TStringList read FListTipo write FListTipo;

    property FiltroGrupoSanguineo: TTipoFiltro read getFiltroGrupoSanguineo write setFiltroGrupoSanguineo;
    property ListGrupoSanguineo: TStringList read FListGrupoSanguineo write FListGrupoSanguineo;

    property FiltroVolume: TTipoFiltro read getFiltroVolume write setFiltroVolume;
    property ListVolume: TStringList read FListVolume write FListVolume;

    property Visualizar: Boolean read getVisualizar write setVisualizar;

    constructor Create; overload;
    destructor Destroy; override;

  end;

implementation

{ TRelEntrada }

constructor TRelEntrada.Create;
begin

end;

destructor TRelEntrada.Destroy;
begin

  inherited;
end;

function TRelEntrada.getDataEntrada: TDate;
begin

  Result := Self.FDataEntrada;

end;

function TRelEntrada.getFiltroGrupoSanguineo: TTipoFiltro;
begin

  Result := Self.FFiltroGrupoSanguineo;

end;

function TRelEntrada.getFiltroTipo: TTipoFiltro;
begin

  Result := Self.FFiltroTipo;

end;

function TRelEntrada.getFiltroVolume: TTipoFiltro;
begin

  Result := Self.FFiltroVolume;

end;

function TRelEntrada.getVisualizar: Boolean;
begin

  Result := Self.FVisualizar;

end;

procedure TRelEntrada.setDataEntrada(const Value: TDate);
begin

  Self.FDataEntrada := Value;

end;

procedure TRelEntrada.setFiltroGrupoSanguineo(const Value: TTipoFiltro);
begin

  Self.FFiltroGrupoSanguineo := Value;

end;

procedure TRelEntrada.setFiltroTipo(const Value: TTipoFiltro);
begin

  Self.FiltroTipo := Value;

end;

procedure TRelEntrada.setFiltroVolume(const Value: TTipoFiltro);
begin

  Self.FFiltroVolume := Value;

end;

procedure TRelEntrada.setVisualizar(const Value: Boolean);
begin

  Self.FVisualizar := Value;

end;

end.
